name: Publish

on:
  push:
    branches:
      - main
  schedule:
    # Every 30 minutes, Monday through Friday
    - cron: '*/30 * * * 1-5'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit
          disable-telemetry: true

      - name: Check out repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Process config
        env:
          EC_AUTOMATION_KEY: ${{ secrets.EC_AUTOMATION_KEY }}
          APP_INSTALL_ID: 29980719
        run: |-
          set -euo pipefail
          function createJWT() {
            local header=$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 | sed s/\+/-/ | sed -E s/=+$//)
            local now_utc=$(date --utc +%s)
            local payload=$(echo -n '{"iat":'$((now_utc - 60))',"exp":'$((now_utc + 120))',"iss":245286}' | base64 | sed s/\+/-/ | sed -E s/=+$//)
            local signature=$(echo -n "${header}.${payload}" | openssl dgst -sha256 -binary -sign <(echo "${EC_AUTOMATION_KEY}")| base64 | tr -d '\n=' | tr -- '+/' '-_')
            echo "${header}.${payload}.${signature}"
          }

          export GITHUB_TOKEN=$(curl -s -X POST -H "Authorization: Bearer $(createJWT)" -H "Accept: application/vnd.github+json" https://api.github.com/app/installations/${APP_INSTALL_ID}/access_tokens | jq -r .token)
          < ./config.yaml envsubst > config-with-token.yaml
          cat config-with-token.yaml

      - name: Run review-rot
        uses: lcarva/review-rot-action/run@cb3c7455d9489ac76d1366076d19d1b91e9384a6 # main
        with:
          config: config-with-token.yaml
          output: output.json

      - name: Process data
        run: |-
          set -euo pipefail
          echo '=== START OF FULL DATA ==='
          cat output.json
          echo '==== END OF FULL DATA ===='

          mkdir web

          < output.json ./filter-data.sh > web/data.json
          echo '=== START OF FILTERED DATA ==='
          cat web/data.json
          echo '==== END OF FILTERED DATA ===='

      - name: Fetch review-rot web
        uses: lcarva/review-rot-action/web@cb3c7455d9489ac76d1366076d19d1b91e9384a6 # main
        with:
          output: web

      - name: Configure pages
        uses: actions/configure-pages@f156874f8191504dae5b037505266ed5dda6c382 # v3.0.6

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@a753861a5debcf57bf8b404356158c8e1e33150c # v2.0.0
        with:
          path: web

      - name: Deploy pages
        uses: actions/deploy-pages@9dbe3824824f8a1377b8e298bafde1a50ede43e5 # v2.0.4
        id: deployment
